load("~/GitHub/politics-and-information/rFacebook/陳學聖.rda")
View(kmt10)
install.packages("Rfacebook")
library(Rfacebook)
library(dplyr)
library(ggplot2)
library(reshape2)
library(plyr)
kmt10 <- filter(kmt10, kmt10$from_name == "陳學聖") #根據名稱做篩選
kmt10$date <- as.Date(kmt10$created_time) #將資料中的日期先做整理
kmt10$count <- 1 # 統計每天發文數量
kmt10 <- filter(kmt10, kmt10$from_name == "林德福") #根據名稱做篩選
kmt10$date <- as.Date(kmt10$created_time) #將資料中的日期先做整理
kmt10$count <- 1 # 統計每天發文數量
View(kmt10)
load("~/GitHub/politics-and-information/rFacebook/林德福.rda")
kmt10 <- filter(kmt10, kmt10$from_name == "林德福") #根據名稱做篩選
kmt10$date <- as.Date(kmt10$created_time) #將資料中的日期先做整理
kmt10$count <- 1 # 統計每天發文數量
kmt10_analysis <- kmt10[kmt10$date <= "2016-09-01",] #根據日期做分群，並且存成新檔案
View(kmt10_analysis)
kmt10_plot <- ddply(kmt10, .(date), summarize, posts=sum(count)) # 根據天數統計貼文
View(kmt10_plot)
ggplot(kmt10_plot, aes(x=date, y=posts))+geom_smooth()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_x_date(date_labels = "%b %Y")+ylab("Posts")+xlab("Date")+
ggtitle("林德福's FB use")  # 較簡單的畫圖方法：根據單一資料畫圖
View(kmt10)
ggplot(kmt10_plot, aes(x=date, y=posts))+geom_smooth()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_x_date(date_labels = "%b %Y")+ylab("Posts")+xlab("Date")+
ggtitle("林德福貼文頻率")  # 較簡單的畫圖方法：根據單一資料畫圖
ggplot(kmt22_plot, aes(x=date, y=posts))+geom_smooth()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_x_date(date_labels = "%b %Y")+ylab("Posts")+xlab("Date")+
ggtitle("陳學聖貼文頻率")  # 較簡單的畫圖方法：根據單一資料畫圖
kmt22_plot <- ddply(kmt22, .(date), summarize, posts=sum(count)) # 根據天數統計貼文
View(kmt22)
ggplot(kmt22_plot, aes(x=date, y=posts))+geom_smooth()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_x_date(date_labels = "%b %Y")+ylab("Posts")+xlab("Date")+
ggtitle("陳學聖貼文頻率")  # 較簡單的畫圖方法：根據單一資料畫圖
kmt22_plot <- ddply(kmt22, .(date), summarize, posts=sum(count)) # 根據天數統計貼文
kmt10_plot <- ddply(kmt10, .(date), summarize, posts=sum(count)) # 根據天數統計貼文
kmt22_plot <- ddply(kmt22, .(date), summarize, posts=sum(count)) # 根據天數統計貼文
######################################################
# 以此類推可以將其他資料進行清理，以及針對時間做分群 #
######################################################
library(plyr)
kmt22_plot <- ddply(kmt22, .(date), summarize, posts=sum(count)) # 根據天數統計貼文
View(kmt10_plot)
kmt22_plot <- ddply(kmt22, .(date), summarize, posts=sum(count)) # 根據天數統計貼文
kmt22_plot <- ddply(kmt22, .date, summarize, posts=sum(count)) # 根據天數統計貼文
kmt22_plot <- ddply(kmt22, date, summarize, posts=sum(count)) # 根據天數統計貼文
kmt22_plot <- ddply(kmt22, date, summarize, posts=sum(count)) # 根據天數統計貼文
load("~/GitHub/politics-and-information/rFacebook/呂玉玲.rda")
kmt07_plot <- ddply(kmt07, .(date), summarize, posts=sum(count)) # 根據天數統計貼文
kmt07_plot <- ddply(kmt07, date, summarize, posts=sum(count)) # 根據天數統計貼文
as.vector(kmt07_date)
as.vector(kmt07$date)
kmt07_plot <- ddply(kmt07, .(date), summarize, posts=sum(count)) # 根據天數統計貼文
as.vector(kmt07$date)
is.vector(kmt07$date)
as.vector(kmt07$date)
View(kmt07)
View(kmt10)
kmt07 <- filter(kmt07, kmt07$from_name == "呂玉玲") #根據名稱做篩選
kmt07$date <- as.Date(kmt07$created_time) #將資料中的日期先做整理
View(kmt07)
kmt07$count <- 1 # 統計每天發文數量
######################################################
# 以此類推可以將其他資料進行清理，以及針對時間做分群 #
######################################################
library(plyr)
kmt07_plot <- ddply(kmt07, .(date), summarize, posts=sum(count)) # 根據天數統計貼文
ggplot(kmt10_plot, aes(x=date, y=posts))+geom_smooth()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_x_date(date_labels = "%b %Y")+ylab("Posts")+xlab("Date")+
ggtitle("林德福貼文頻率")  # 較簡單的畫圖方法：根據單一資料畫圖
######################################################
# 以此類推可以將其他資料進行清理，以及針對時間做分群 #
######################################################
library(plyr)
kmt07_plot <- ddply(kmt07, .(date), summarize, posts=sum(count)) # 根據天數統計貼文
ggplot(kmt10_plot, aes(x=date, y=posts))+geom_smooth()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_x_date(date_labels = "%b %Y")+ylab("Posts")+xlab("Date")+
ggtitle("林德福貼文頻率")  # 較簡單的畫圖方法：根據單一資料畫圖
View(kmt07_plot)
ggplot(kmt07_plot, aes(x=date, y=posts))+geom_smooth()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_x_date(date_labels = "%b %Y")+ylab("Posts")+xlab("Date")+
ggtitle("呂玉玲貼文頻率")  # 較簡單的畫圖方法：根據單一資料畫圖
library(dplyr)
library(ggplot2)
library(reshape2)
library(plyr)
ggplot(kmt07_plot, aes(x=date, y=posts))+geom_smooth()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_x_date(date_labels = "%b %Y")+ylab("Posts")+xlab("Date")+
ggtitle("呂玉玲貼文頻率")  # 較簡單的畫圖方法：根據單一資料畫圖
View(kmt10_plot)
ggplot(kmt10_plot, aes(x=date, y=posts))+geom_smooth()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_x_date(date_labels = "%b %Y")+ylab("Posts")+xlab("Date")+
ggtitle("林德福貼文頻率")  # 較簡單的畫圖方法：根據單一資料畫圖
View(kmt10)
View(kmt22)
kmt22 <- filter(kmt22, kmt07$from_name == "陳學聖") #根據名稱做篩選
kmt22$date <- as.Date(kmt22$created_time) #將資料中的日期先做整理
kmt22$count <- 1 # 統計每天發文數量
kmt22 <- filter(kmt22, kmt22$from_name == "陳學聖") #根據名稱做篩選
kmt22$date <- as.Date(kmt22$created_time) #將資料中的日期先做整理
kmt22$count <- 1 # 統計每天發文數量
######################################################
# 以此類推可以將其他資料進行清理，以及針對時間做分群 #
######################################################
library(plyr)
kmt22_plot <- ddply(kmt22, .(date), summarize, posts=sum(count)) # 根據天數統計貼文
ggplot(kmt22_plot, aes(x=date, y=posts))+geom_smooth()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_x_date(date_labels = "%b %Y")+ylab("Posts")+xlab("Date")+
ggtitle("林德福貼文頻率")  # 較簡單的畫圖方法：根據單一資料畫圖
ggplot(kmt22_plot, aes(x=date, y=posts))+geom_smooth()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_x_date(date_labels = "%b %Y")+ylab("Posts")+xlab("Date")+
ggtitle("陳學聖貼文頻率")  # 較簡單的畫圖方法：根據單一資料畫圖
load("~/GitHub/politics-and-information/rFacebook/林淑芬.rda")
View(ddp19)
dpp19 <- filter(dpp19, dpp19$from_name == "林淑芬") #根據名稱做篩選
dpp19$date <- as.Date(dpp19$created_time) #將資料中的日期先做整理
View(ddp19)
ddp19 <- dpp19
dpp19 <- ddp19
dpp19 <- filter(dpp19, dpp19$from_name == "林淑芬") #根據名稱做篩選
dpp19$date <- as.Date(dpp19$created_time) #將資料中的日期先做整理
dpp19$count <- 1 # 統計每天發文數量
dpp19_plot <- ddply(dpp19, .(date), summarize, posts=sum(count)) # 根據天數統計貼文
ggplot(dpp19_plot, aes(x=date, y=posts))+geom_smooth()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_x_date(date_labels = "%b %Y")+ylab("Posts")+xlab("Date")+
ggtitle("林淑芬貼文頻率")  # 較簡單的畫圖方法：根據單一資料畫圖
load("~/GitHub/politics-and-information/rFacebook/姚文智.rda")
dpp23 <- filter(dpp23, dpp23$from_name == "林淑芬") #根據名稱做篩選
ddp23 <- dpp23
dpp23 <- ddp23
dpp23 <- filter(dpp23, dpp23$from_name == "林淑芬") #根據名稱做篩選
dpp23$date <- as.Date(dpp23$created_time) #將資料中的日期先做整理
dpp23$count <- 1 # 統計每天發文數量
dpp23_plot <- ddply(dpp23, .(date), summarize, posts=sum(count)) # 根據天數統計貼文
ggplot(dpp23_plot, aes(x=date, y=posts))+geom_smooth()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_x_date(date_labels = "%b %Y")+ylab("Posts")+xlab("Date")+
ggtitle("林淑芬貼文頻率")  # 較簡單的畫圖方法：根據單一資料畫圖
dpp23_plot <- ddply(dpp23, .(date), summarize, posts=sum(count)) # 根據天數統計貼文
ggplot(dpp23_plot, aes(x=date, y=posts))+geom_smooth()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_x_date(date_labels = "%b %Y")+ylab("Posts")+xlab("Date")+
ggtitle("姚文智貼文頻率")  # 較簡單的畫圖方法：根據單一資料畫圖
View(dpp23_plot)
View(dpp23)
dpp23 <- ddp23
dpp23 <- filter(dpp23, dpp23$from_name == "姚文智") #根據名稱做篩選
dpp23 <- ddp23
View(dpp23)
dpp23 <- filter(dpp23, dpp23$from_name == "姚文智翻台北") #根據名稱做篩選
dpp23$date <- as.Date(dpp23$created_time) #將資料中的日期先做整理
dpp23$count <- 1 # 統計每天發文數量
dpp23_plot <- ddply(dpp23, .(date), summarize, posts=sum(count)) # 根據天數統計貼文
ggplot(dpp23_plot, aes(x=date, y=posts))+geom_smooth()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_x_date(date_labels = "%b %Y")+ylab("Posts")+xlab("Date")+
ggtitle("姚文智貼文頻率")  # 較簡單的畫圖方法：根據單一資料畫圖
load("~/GitHub/politics-and-information/rFacebook/柯建銘.rda")
dpp24 <- ddp24
dpp24 <- filter(dpp24, dpp24$from_name == "柯建銘") #根據名稱做篩選
dpp24$date <- as.Date(dpp24$created_time) #將資料中的日期先做整理
dpp24$count <- 1 # 統計每天發文數量
dpp24_plot <- ddply(dpp24, .(date), summarize, posts=sum(count)) # 根據天數統計貼文
ggplot(dpp24_plot, aes(x=date, y=posts))+geom_smooth()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_x_date(date_labels = "%b %Y")+ylab("Posts")+xlab("Date")+
ggtitle("柯建銘發文頻率")  # 較簡單的畫圖方法：根據單一資料畫圖
ggplot(dpp19_plot, aes(x=date, y=posts))+geom_smooth()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_x_date(date_labels = "%b %Y")+ylab("Posts")+xlab("Date")+
ggtitle("林淑芬發文頻率")  # 較簡單的畫圖方法：根據單一資料畫圖
ggplot(dpp23_plot, aes(x=date, y=posts))+geom_smooth()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_x_date(date_labels = "%b %Y")+ylab("Posts")+xlab("Date")+
ggtitle("姚文智發文頻率")  # 較簡單的畫圖方法：根據單一資料畫圖
ggplot(dpp24_plot, aes(x=date, y=posts))+geom_smooth()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_x_date(date_labels = "%b %Y")+ylab("Posts")+xlab("Date")+
ggtitle("柯建銘發文頻率")  # 較簡單的畫圖方法：根據單一資料畫圖
ggplot(kmt07_plot, aes(x=date, y=posts))+geom_smooth()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_x_date(date_labels = "%b %Y")+ylab("Posts")+xlab("Date")+
ggtitle("呂玉玲發文頻率")  # 較簡單的畫圖方法：根據單一資料畫圖
ggplot(kmt10_plot, aes(x=date, y=posts))+geom_smooth()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_x_date(date_labels = "%b %Y")+ylab("Posts")+xlab("Date")+
ggtitle("林德福發文頻率")  # 較簡單的畫圖方法：根據單一資料畫圖
ggtitle(陳學聖福發文頻率")  # 較簡單的畫圖方法：根據單一資料畫圖
ggplot(kmt22_plot, aes(x=date, y=posts))+geom_smooth()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_x_date(date_labels = "%b %Y")+ylab("Posts")+xlab("Date")+
ggtitle("陳學聖福發文頻率")  # 較簡單的畫圖方法：根據單一資料畫圖
ggplot(kmt22_plot, aes(x=date, y=posts))+geom_smooth()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_x_date(date_labels = "%b %Y")+ylab("Posts")+xlab("Date")+
ggtitle("陳學聖福發文頻率")  # 較簡單的畫圖方法：根據單一資料畫圖
ggplot(kmt19_plot, aes(x=date, y=posts))+geom_smooth()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_x_date(date_labels = "%b %Y")+ylab("Posts")+xlab("Date")+
ggtitle("陳學聖發文頻率")  # 較簡單的畫圖方法：根據單一資料畫圖
ggplot(kmt22_plot, aes(x=date, y=posts))+geom_smooth()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_x_date(date_labels = "%b %Y")+ylab("Posts")+xlab("Date")+
ggtitle("陳學聖發文頻率")  # 較簡單的畫圖方法：根據單一資料畫圖
ggplot(dpp19_plot, aes(x=date, y=posts))+geom_smooth()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_x_date(date_labels = "%b %Y")+ylab("Posts")+xlab("Date")+
ggtitle("林淑芬發文頻率")  # 較簡單的畫圖方法：根據單一資料畫圖
View(kmt07)
View(kmt07)
load("~/GitHub/politics-and-information/rFacebook/姚文智.rda")
load("~/GitHub/politics-and-information/rFacebook/林德福.rda")
load("~/GitHub/politics-and-information/rFacebook/林淑芬.rda")
load("~/GitHub/politics-and-information/rFacebook/柯建銘.rda")
load("~/GitHub/politics-and-information/rFacebook/陳學聖.rda")
View(ddp19)
林淑芬 <- ddp19$message # iris 是 R 內建的資料。
write.table(林淑芬, file = "林淑芬.CSV", sep = ",")
姚文智 <- ddp23$message # iris 是 R 內建的資料。
write.table(姚文智, file = "姚文智.CSV", sep = ",")
View(ddp24)
柯建銘 <- ddp24$message # iris 是 R 內建的資料。
write.table(柯建銘, file = "柯建銘.CSV", sep = ",")
呂玉玲 <- kmt07$message # iris 是 R 內建的資料。
write.table(xm3m4ux/6, file = "林淑芬.CSV", sep = ",")
呂玉玲 <- kmt07$message # iris 是 R 內建的資料。
write.table(呂玉玲, file = "呂玉玲.CSV", sep = ",")
林德福 <- kmt10$message # iris 是 R 內建的資料。
write.table(林德福, file = "林德福.CSV", sep = ",")
陳學聖 <- kmt22$message # iris 是 R 內建的資料。
write.table(陳學聖, file = "陳學聖.CSV", sep = ",")
---
ddp23_mes <- data.frame(ddp23$story, ddp23$message, ddp23$created_time, ddp23$link)
View(ddp23)
View(ddp23)
---
ddp23_mes <- data.frame(ddp23$story, ddp23$message, ddp23$created_time, ddp23$link)
---
ddp23_mes <- data.frame(ddp23$story, ddp23$message, ddp23$created_time, ddp23$link)
colnames(ddp23_mes)<-c("artTitle", "artContent", "artDate", "artUrl")
write.csv(ddp23_mes, file = "n姚文智.csv", fileEncoding = "UTF-8")
library(dplyr)
library(ggplot2)
library(reshape2)
library(plyr)
---
ddp23_mes <- data.frame(ddp23$story, ddp23$message, ddp23$created_time, ddp23$link)
---
ddp23_mes <- data.frame(ddp23$story, ddp23$message, ddp23$created_time, ddp23$link)
---
ddp23$id <- data.frame(ddp23$story, ddp23$message, ddp23$created_time, ddp23$link)
colnames(ddp23$id)<-c("artTitle", "artContent", "artDate", "artUrl")
write.csv(ddp23$id, file = "n姚文智.csv", fileEncoding = "UTF-8")
load("~/GitHub/politics-and-information/rFacebook/陳學聖.rda")
---
陳學聖 <- c(kmt22$message, kmt22$message, kmt22$created_time, kmt22$link) # iris 是 R 內建的資料。
---
陳學聖 <- c(kmt22$message, kmt22$message, kmt22$created_time, kmt22$link) # iris 是 R 內建的資料。
write.table(陳學聖, file = "陳學聖.CSV", sep = ",")
---
ddp23_mes <- data.frame(ddp23$story, ddp23$message, ddp23$created_time, ddp23$link)
colnames(ddp23_mes)<-c("artTitle", "artContent", "artDate", "artUrl")
write.csv(ddp23_mes, file = "n姚文智.csv", fileEncoding = "UTF-8")
library(dplyr)
library(ggplot2)
library(reshape2)
library(plyr)
dpp24 <- ddp24
dpp24 <- filter(dpp24, dpp24$from_name == "柯建銘") #根據名稱做篩選
dpp24$date <- as.Date(dpp24$created_time) #將資料中的日期先做整理
dpp24$count <- 1 # 統計每天發文數量
kmt10_analysis <- kmt10[kmt10$date <= "2016-09-01",] #根據日期做分群，並且存成新檔案
######################################################
# 以此類推可以將其他資料進行清理，以及針對時間做分群 #
######################################################
library(plyr)
dpp24_plot <- ddply(dpp24, .(date), summarize, posts=sum(count)) # 根據天數統計貼文
ggplot(dpp19_plot, aes(x=date, y=posts))+geom_smooth()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_x_date(date_labels = "%b %Y")+ylab("Posts")+xlab("Date")+
ggtitle("林淑芬發文頻率")  # 較簡單的畫圖方法：根據單一資料畫圖
## 目前製圖部份中文似乎還是亂碼，無法顯示
## 目前製圖部份中文似乎還是亂碼，無法顯示
## 目前製圖部份中文似乎還是亂碼，無法顯示
## 目前製圖部份中文似乎還是亂碼，無法顯示
---
ddp23_mes <- data.frame(ddp23$story, ddp23$message, ddp23$created_time, ddp23$link)
load("~/GitHub/politics-and-information/rFacebook/姚文智.rda")
---
ddp23_mes <- data.frame(ddp23$story, ddp23$message, ddp23$created_time, ddp23$link)
---
ddp23 <- data.frame(ddp23$story, ddp23$message, ddp23$created_time, ddp23$link)
---
ddp23_mes<- data.frame(ddp23$story, ddp23$message, ddp23$created_time, ddp23$link)
---
ddp23_mes<- data.frame(ddp23$story, ddp23$message, ddp23$created_time, ddp23$link)
ddp23$story
ddp23_mes
ddp23_mes<- data.frame(ddp23$story, ddp23$message, ddp23$created_time, ddp23$link)
colnames(ddp23_mes)<-c("artTitle", "artContent", "artDate", "artUrl")
write.csv(ddp23_mes, file = "n姚文智.csv", fileEncoding = "UTF-8")
library(dplyr)
library(ggplot2)
library(reshape2)
library(plyr)
---
ddp23_mes<- data.frame(ddp23$story, ddp23$message, ddp23$created_time, ddp23$link)
ddp23_mes<- data.frame(ddp23$story, ddp23$message, ddp23$created_time, ddp23$link)
colnames(ddp23_mes)<-c("artTitle", "artContent", "artDate", "artUrl")
write.csv(ddp23_mes, file = "n姚文智.csv", fileEncoding = "UTF-8")
write.csv(ddp23_mes, file = "n姚文智.csv")
View(kmt07)
---
kmt07_mes<- data.frame(kmt07$story, kmt07$message, kmt07$created_time, kmt07$link)
kmt07_mes<- data.frame(kmt07$story, kmt07$message, kmt07$created_time, kmt07$link)
kmt07_mes<- data.frame(kmt07$story, kmt07$message, kmt07$created_time, kmt07$link)
kmt07_mes<- data.frame(kmt07$story, kmt07$message, kmt07$created_time, kmt07$link)
colnames(kmt07_mes)<-c("artTitle", "artContent", "artDate", "artUrl")
write.csv(kmt07_mes, file = "luyuling.csv")
