# Craete variable called my.height.cm with your actual height in cm
my.height.cm <- 182
# Craete variable called my.weight.cm with your actual weight in kg
my.weight.kg <- 75
# Create my.height.m transfered by my.height.cm
my.height.m <- 1.82
# Create my.bmi with BMI(Body Mass Index) formula
my.bmi <-  (my.height.m)^2 / my.weight.kg
# Create my.bmi with BMI(Body Mass Index) formula
my.bmi <-  my.weight.kg / (my.height.m)^2
# Craete variable called my.height.cm with your actual height in cm
my.height.cm <-
# Craete variable called my.weight.cm with your actual weight in kg
my.weight.kg <-
# Create my.height.m transfered by my.height.cm
my.height.m <-
# Create my.bmi with BMI(Body Mass Index) formula
my.bmi <-
# Use if-else to print matched information
# Reference: http://www.tpech.gov.taipei/ct.asp?xItem=1794336&CtNode=30678&mp=109171
if (my.bmi >= 35) {
print(paste("Your bmi: ", my.bmi))
print("重度肥胖!")
} else if (my.bmi >=30) {
print(paste("Your bmi: ", my.bmi))
print("中度肥胖")
} else if (my.bmi >=27) {
print(paste("Your bmi: ", my.bmi))
print("輕度肥胖")
} else if (my.bmi >=24) {
print(paste("Your bmi: ", my.bmi))
print("過重")
} else if (my.bmi >=18.5) {
print(paste("Your bmi: ", my.bmi))
print("正常範圍")
} else print(paste("Your bmi: ", my.bmi))
# Craete variable called my.height.cm with your actual height in cm
my.height.cm <-182
# Craete variable called my.weight.cm with your actual weight in kg
my.weight.kg <-75
# Create my.bmi with BMI(Body Mass Index) formula
my.bmi <- my.weight.kg / (my.height.m)^2
# Create my.height.m transfered by my.height.cm
my.height.m <- 1.82
# Create my.bmi with BMI(Body Mass Index) formula
my.bmi <- my.weight.kg / (my.height.m)^2
# Use if-else to print matched information
# Reference: http://www.tpech.gov.taipei/ct.asp?xItem=1794336&CtNode=30678&mp=109171
if (my.bmi >= 35) {
print(paste("Your bmi: ", my.bmi))
print("重度肥胖!")
} else if (my.bmi >=30) {
print(paste("Your bmi: ", my.bmi))
print("中度肥胖")
} else if (my.bmi >=27) {
print(paste("Your bmi: ", my.bmi))
print("輕度肥胖")
} else if (my.bmi >=24) {
print(paste("Your bmi: ", my.bmi))
print("過重")
} else if (my.bmi >=18.5) {
print(paste("Your bmi: ", my.bmi))
print("正常範圍")
} else {
print(paste("Your bmi: ", my.bmi))
print("體重過輕")
}
# Create a vector called course.students.number, with data: c(1, 30)
course.student.number <- c(1,30)
# Create a variable csn, with data: length of course.student.number
csn <- 30
# Create a vector course.student.grade, with sample() function: x = c(55:100), size = csn
course.student.grade <- x= c(40:99), size = csn
# Create a vector course.student.grade, with sample() function: x = c(55:100), size = csn
course.student.grade <- sample() x= c(40:99), size = csn
# Create a vector course.student.grade, with sample() function: x = c(55:100), size = csn
course.student.grade <- sample(x) x= c(40:99), size = csn
# Create a vector course.student.grade, with sample() function: x = c(55:100), size = csn
course.student.grade <- sample(x), x= c(40:99), size = csn
# Create a vector called course.students.number, with data: c(1, 30)
course.student.number <- c(1:30)
# Create a variable csn, with data: length of course.student.number
csn <- 30
# Create a vector course.student.grade, with sample() function: x = c(55:100), size = csn
course.student.grade <- x= c(40:99), size = csn
# Create a vector course.student.grade, with sample() function: x = c(55:100), size = csn
course.student.grade <- ample() function: x = c(55:100), size = csn
# Create a vector course.student.grade, with sample() function: x = c(55:100), size = csn
course.student.grade <- sample() function: x = c(55:100), size = csn
# Create a vector course.student.grade, with sample() function: x = c(55:100), size = csn
course.student.grade <- sample(x = c(55:100), size = csn)
# Assign course.student.number as names of the course.student.grade
names(course.student.grade) <- course.student.number
# Create csg.mean, with the mean value of course.student.grade
csg.mean <- mean(course.student.grade)
# Create csg.max with the max value of course.student.grade
csg.max <- max(course.student.grade)
# Create csg.min with the min value of course.student.grade
csg.min <- min(course.student.grade)
# Create a vector csg.over.80, with the logical result of course.student.grade over 80
csg.over.80 <- course.student.grade >80
# Check csg.over.mean
csg.over.80
# Create a vector csg.over.80, with the logical result of course.student.grade over 80
csg.over.80 <- course.student.grade >=80
# Check csg.over.mean
csg.over.80
# Filter the course.student.grade with csg.over.mean
course.student.grade[csg.over.80]
# Print course information
print(paste("全班人數:", csn))
print(paste("全班平均：", csg.mean))
print(paste("全班最高：", csg.max))
print(paste("全班最低：", csg.min))
# Print over 80 details
print(paste("80分以上人數", course.student.grade[csg.over.80]))
# Filter the course.student.grade with csg.over.mean
course.student.grade[csg.over.80]
# Print over 80 details
print(paste("80分以上人數", length(csg.over.80))
# Print over 80 details
print(paste("80分以上人數", length(course.student.grade[csg.over.80]))
# Print over 80 details
print(paste("80分以上人數", length(course.student.grade[csg.over.80])))
print(paste("80分以上座號", namw(course.student.grade[csg.over.80])))
print(paste("80分以上座號", names(course.student.grade[csg.over.80])))
