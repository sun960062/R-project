#Ex4
bar_count <- function(totalkilo){
for(kilo in totalkilo){
fivekilobars <- kilo %/% 5
onekilobars <- kilo %% 5
}
return (print(fivekilobars + onekilobars))
}
bar_count(5)
bar_count(80)
bar_count(81)
?append
#Ex5
summer <- function(v){
for(sum1 in v){
threeproduct <- sum1%%3 == 0
threeproduct
}
}
function(7,8,3)
summer(7,8,3)
summer(c(7,8,3))
threeprosuct
threeproduct
threeproduct <- sum1%%3 == 0
#Ex5
summer <- function(v){
for(sum1 in v){
threeproduct <- sum1%%3 == 0
threeproduct
}
}
for(sum1 in v){
threeproduct <- sum1%%3 == 0
threeproduct
}
threeproduct <- sum1%%3 == 0
threeproduct
#Ex5
summer <- function(v){
for(sum1 in v){
threeproduct <- sum1%%3 == 0
sum2 <- sum1[-threeproduct]
}
return(paste(append(sum2)))
}
summer(c(5,7,9))
append(1:5, 0:1, after = 3)
#Ex5
summer <- function(v){
for(sum1 in v){
threeproduct <- sum1%%3 == 0
sum2 <- sum1[-threeproduct]
}
ans <- append(sum1,-threeproduct)
return(paste(sum(ans)))
}
summer(c(5,7,9))
#Ex5
summer <- function(v){
for(sum1 in v){
threeproduct <- sum1%%3 == 0
}
ans <- append(sum1,-threeproduct)
return(paste(sum(ans)))
}
summer(c(5,7,9))
threeproduct
threeproduct <- sum1%%3 == 0
#Ex5
summer <- function(v){
for(sum1 in v){
threeproduct <- sum1%%3 == 0
}
ans <- append(sum1,-threeproduct)
return(paste(sum(ans)))
}
View(summer)
#Ex5
summer <- function(v){
for(sum1 in v){
threeproduct <- sum1%%3 == 0
}
ans <- append(sum1,-threeproduct)
return(paste(sum(ans)))
}
summer(c(5,7,9))
summer(c(5,8,9))
summer(c(5,8,17))
summer(c(5,18,17))
summer(c(51,18,17))
minus <- sum1 %% ==0
#Ex5
summer <- function(a, b, c){
out <- c(0)
if (a %% 3 != 0){
out <- append(a,out)
}
if (b %% 3 != 0){
out <- append(b,out)
}
if (c %% 3 != 0){
out <- append(c,out)
}
return(sum(out))
}
summer(c(5,7,9))
#Ex5
summer <- function(a, b, c){
out <- c(0)
if (a %% 3 != 0){
out <- append(a,out)
}
if (b %% 3 != 0){
out <- append(b,out)
}
if (c %% 3 != 0){
out <- append(c,out)
}
return(sum(out))
}
summer(c(5,7,9))
summer(5,7,9)
#Ex6
prime_check <- function(num) {
if (num == 2) {
return(TRUE)
} else if (any(num %% 2:(num-1) == 0)) {
return(FALSE)
} else {
return(TRUE)
}
}
prime_check(9777)
